<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.beardream.dao.UserDetailMapper">
  <resultMap id="BaseResultMap" type="com.beardream.model.UserDetail">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="login_error_date" jdbcType="TIMESTAMP" property="loginErrorDate" />
    <result column="login_error_count" jdbcType="INTEGER" property="loginErrorCount" />
    <result column="last_login_date" jdbcType="TIMESTAMP" property="lastLoginDate" />
    <result column="last_login_ip" jdbcType="VARCHAR" property="lastLoginIp" />
    <result column="creation_date" jdbcType="TIMESTAMP" property="creationDate" />
    <result column="creation_ip" jdbcType="VARCHAR" property="creationIp" />
    <result column="logins" jdbcType="INTEGER" property="logins" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="bio" jdbcType="VARCHAR" property="bio" />
    <result column="come_from" jdbcType="VARCHAR" property="comeFrom" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="weibo" jdbcType="VARCHAR" property="weibo" />
    <result column="msn" jdbcType="VARCHAR" property="msn" />
    <result column="weixin" jdbcType="VARCHAR" property="weixin" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="origin" jdbcType="VARCHAR" property="origin" />
    <result column="nation" jdbcType="VARCHAR" property="nation" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="hobby" jdbcType="VARCHAR" property="hobby" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="now_address" jdbcType="VARCHAR" property="nowAddress" />
    <result column="longitude" jdbcType="DOUBLE" property="longitude" />
    <result column="latitude" jdbcType="DOUBLE" property="latitude" />
    <result column="profession" jdbcType="VARCHAR" property="profession" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="allpay" jdbcType="VARCHAR" property="allpay" />
    <result column="level_id" jdbcType="INTEGER" property="levelId" />
    <result column="integral" jdbcType="INTEGER" property="integral" />
    <result column="freeze_money" jdbcType="REAL" property="freezeMoney" />
    <result column="money" jdbcType="REAL" property="money" />
    <result column="posts" jdbcType="INTEGER" property="posts" />
    <result column="Signature" jdbcType="VARCHAR" property="signature" />
    <result column="following" jdbcType="INTEGER" property="following" />
    <result column="concernNum" jdbcType="INTEGER" property="concernnum" />
    <result column="fansNum" jdbcType="INTEGER" property="fansnum" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, login_error_date, login_error_count, last_login_date, last_login_ip, creation_date, 
    creation_ip, logins, avatar, bio, come_from, qq, weibo, msn, weixin, updatetime, 
    origin, nation, address, hobby, remarks, idcard, now_address, longitude, latitude, 
    profession, age, allpay, level_id, integral, freeze_money, money, posts, Signature, 
    following, concernNum, fansNum
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user_detail
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user_detail
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.beardream.model.UserDetail">
    insert into t_user_detail (user_id, login_error_date, login_error_count, 
      last_login_date, last_login_ip, creation_date, 
      creation_ip, logins, avatar, 
      bio, come_from, qq, 
      weibo, msn, weixin, 
      updatetime, origin, nation, 
      address, hobby, remarks, 
      idcard, now_address, longitude, 
      latitude, profession, age, 
      allpay, level_id, integral, 
      freeze_money, money, posts, 
      Signature, following, concernNum, 
      fansNum)
    values (#{userId,jdbcType=INTEGER}, #{loginErrorDate,jdbcType=TIMESTAMP}, #{loginErrorCount,jdbcType=INTEGER}, 
      #{lastLoginDate,jdbcType=TIMESTAMP}, #{lastLoginIp,jdbcType=VARCHAR}, #{creationDate,jdbcType=TIMESTAMP}, 
      #{creationIp,jdbcType=VARCHAR}, #{logins,jdbcType=INTEGER}, #{avatar,jdbcType=VARCHAR}, 
      #{bio,jdbcType=VARCHAR}, #{comeFrom,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{weibo,jdbcType=VARCHAR}, #{msn,jdbcType=VARCHAR}, #{weixin,jdbcType=VARCHAR}, 
      #{updatetime,jdbcType=TIMESTAMP}, #{origin,jdbcType=VARCHAR}, #{nation,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{hobby,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, 
      #{idcard,jdbcType=VARCHAR}, #{nowAddress,jdbcType=VARCHAR}, #{longitude,jdbcType=DOUBLE}, 
      #{latitude,jdbcType=DOUBLE}, #{profession,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{allpay,jdbcType=VARCHAR}, #{levelId,jdbcType=INTEGER}, #{integral,jdbcType=INTEGER}, 
      #{freezeMoney,jdbcType=REAL}, #{money,jdbcType=REAL}, #{posts,jdbcType=INTEGER}, 
      #{signature,jdbcType=VARCHAR}, #{following,jdbcType=INTEGER}, #{concernnum,jdbcType=INTEGER}, 
      #{fansnum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.beardream.model.UserDetail">
    insert into t_user_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="loginErrorDate != null">
        login_error_date,
      </if>
      <if test="loginErrorCount != null">
        login_error_count,
      </if>
      <if test="lastLoginDate != null">
        last_login_date,
      </if>
      <if test="lastLoginIp != null">
        last_login_ip,
      </if>
      <if test="creationDate != null">
        creation_date,
      </if>
      <if test="creationIp != null">
        creation_ip,
      </if>
      <if test="logins != null">
        logins,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="bio != null">
        bio,
      </if>
      <if test="comeFrom != null">
        come_from,
      </if>
      <if test="qq != null">
        qq,
      </if>
      <if test="weibo != null">
        weibo,
      </if>
      <if test="msn != null">
        msn,
      </if>
      <if test="weixin != null">
        weixin,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="origin != null">
        origin,
      </if>
      <if test="nation != null">
        nation,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="hobby != null">
        hobby,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="nowAddress != null">
        now_address,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="profession != null">
        profession,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="allpay != null">
        allpay,
      </if>
      <if test="levelId != null">
        level_id,
      </if>
      <if test="integral != null">
        integral,
      </if>
      <if test="freezeMoney != null">
        freeze_money,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="posts != null">
        posts,
      </if>
      <if test="signature != null">
        Signature,
      </if>
      <if test="following != null">
        following,
      </if>
      <if test="concernnum != null">
        concernNum,
      </if>
      <if test="fansnum != null">
        fansNum,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="loginErrorDate != null">
        #{loginErrorDate,jdbcType=TIMESTAMP},
      </if>
      <if test="loginErrorCount != null">
        #{loginErrorCount,jdbcType=INTEGER},
      </if>
      <if test="lastLoginDate != null">
        #{lastLoginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginIp != null">
        #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="creationDate != null">
        #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="creationIp != null">
        #{creationIp,jdbcType=VARCHAR},
      </if>
      <if test="logins != null">
        #{logins,jdbcType=INTEGER},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="bio != null">
        #{bio,jdbcType=VARCHAR},
      </if>
      <if test="comeFrom != null">
        #{comeFrom,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="weibo != null">
        #{weibo,jdbcType=VARCHAR},
      </if>
      <if test="msn != null">
        #{msn,jdbcType=VARCHAR},
      </if>
      <if test="weixin != null">
        #{weixin,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="origin != null">
        #{origin,jdbcType=VARCHAR},
      </if>
      <if test="nation != null">
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="hobby != null">
        #{hobby,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="nowAddress != null">
        #{nowAddress,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="profession != null">
        #{profession,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="allpay != null">
        #{allpay,jdbcType=VARCHAR},
      </if>
      <if test="levelId != null">
        #{levelId,jdbcType=INTEGER},
      </if>
      <if test="integral != null">
        #{integral,jdbcType=INTEGER},
      </if>
      <if test="freezeMoney != null">
        #{freezeMoney,jdbcType=REAL},
      </if>
      <if test="money != null">
        #{money,jdbcType=REAL},
      </if>
      <if test="posts != null">
        #{posts,jdbcType=INTEGER},
      </if>
      <if test="signature != null">
        #{signature,jdbcType=VARCHAR},
      </if>
      <if test="following != null">
        #{following,jdbcType=INTEGER},
      </if>
      <if test="concernnum != null">
        #{concernnum,jdbcType=INTEGER},
      </if>
      <if test="fansnum != null">
        #{fansnum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.beardream.model.UserDetail">
    update t_user_detail
    <set>
      <if test="loginErrorDate != null">
        login_error_date = #{loginErrorDate,jdbcType=TIMESTAMP},
      </if>
      <if test="loginErrorCount != null">
        login_error_count = #{loginErrorCount,jdbcType=INTEGER},
      </if>
      <if test="lastLoginDate != null">
        last_login_date = #{lastLoginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginIp != null">
        last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="creationDate != null">
        creation_date = #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="creationIp != null">
        creation_ip = #{creationIp,jdbcType=VARCHAR},
      </if>
      <if test="logins != null">
        logins = #{logins,jdbcType=INTEGER},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="bio != null">
        bio = #{bio,jdbcType=VARCHAR},
      </if>
      <if test="comeFrom != null">
        come_from = #{comeFrom,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="weibo != null">
        weibo = #{weibo,jdbcType=VARCHAR},
      </if>
      <if test="msn != null">
        msn = #{msn,jdbcType=VARCHAR},
      </if>
      <if test="weixin != null">
        weixin = #{weixin,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="origin != null">
        origin = #{origin,jdbcType=VARCHAR},
      </if>
      <if test="nation != null">
        nation = #{nation,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="hobby != null">
        hobby = #{hobby,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="nowAddress != null">
        now_address = #{nowAddress,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="profession != null">
        profession = #{profession,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="allpay != null">
        allpay = #{allpay,jdbcType=VARCHAR},
      </if>
      <if test="levelId != null">
        level_id = #{levelId,jdbcType=INTEGER},
      </if>
      <if test="integral != null">
        integral = #{integral,jdbcType=INTEGER},
      </if>
      <if test="freezeMoney != null">
        freeze_money = #{freezeMoney,jdbcType=REAL},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=REAL},
      </if>
      <if test="posts != null">
        posts = #{posts,jdbcType=INTEGER},
      </if>
      <if test="signature != null">
        Signature = #{signature,jdbcType=VARCHAR},
      </if>
      <if test="following != null">
        following = #{following,jdbcType=INTEGER},
      </if>
      <if test="concernnum != null">
        concernNum = #{concernnum,jdbcType=INTEGER},
      </if>
      <if test="fansnum != null">
        fansNum = #{fansnum,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.beardream.model.UserDetail">
    update t_user_detail
    set login_error_date = #{loginErrorDate,jdbcType=TIMESTAMP},
      login_error_count = #{loginErrorCount,jdbcType=INTEGER},
      last_login_date = #{lastLoginDate,jdbcType=TIMESTAMP},
      last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      creation_date = #{creationDate,jdbcType=TIMESTAMP},
      creation_ip = #{creationIp,jdbcType=VARCHAR},
      logins = #{logins,jdbcType=INTEGER},
      avatar = #{avatar,jdbcType=VARCHAR},
      bio = #{bio,jdbcType=VARCHAR},
      come_from = #{comeFrom,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      weibo = #{weibo,jdbcType=VARCHAR},
      msn = #{msn,jdbcType=VARCHAR},
      weixin = #{weixin,jdbcType=VARCHAR},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      origin = #{origin,jdbcType=VARCHAR},
      nation = #{nation,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      hobby = #{hobby,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      now_address = #{nowAddress,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DOUBLE},
      latitude = #{latitude,jdbcType=DOUBLE},
      profession = #{profession,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      allpay = #{allpay,jdbcType=VARCHAR},
      level_id = #{levelId,jdbcType=INTEGER},
      integral = #{integral,jdbcType=INTEGER},
      freeze_money = #{freezeMoney,jdbcType=REAL},
      money = #{money,jdbcType=REAL},
      posts = #{posts,jdbcType=INTEGER},
      Signature = #{signature,jdbcType=VARCHAR},
      following = #{following,jdbcType=INTEGER},
      concernNum = #{concernnum,jdbcType=INTEGER},
      fansNum = #{fansnum,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>